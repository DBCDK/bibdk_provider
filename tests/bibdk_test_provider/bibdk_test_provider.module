<?php

function bibdk_test_provider_ding_provider() {
  return array(
    'title' => 'Bibliotek.dk test provider',
    'settings' => 'bibdk_test_provider_settings_form',
    'provides' => array(
      'user' => array(
        'prefix' => 'user',
      ),
    ),
  );
}

function bibdk_test_provider_settings_form() {
  return array();
}

// @TODO this function should do something
function bibdk_test_provider_user_is_authenticated() {
  return TRUE;
}

/**
 * fake a successful login
 * */
function bibdk_test_provider_user_authenticate($name, $pass) {
  $return['creds'] =
      array(
        'name' => $name,
        'pass' => $pass,
  );
  $return['user'] =
      array(
        'data' => array('display_name' => 'HEST'),
        'mail' => $name,
  );
  $return['success'] = TRUE;
  $return['messages'] = array('HEJ', 'notice');
 
  return $return;
}

function bibdk_test_provider_user_verify($name) {
  //return BibdkUser::instance()->verify($name);
  static $response;
  if (!isset($response)) {
    $response = BibdkUser::instance()->verify($name);
  }
  return $response;
}

function bibdk_test_provider_user_create_account($name, $pass) {
  return BibdkUser::instance()->create($name, $pass);
}

function bibdk_test_provider_user_update_password($name, $pass) {
  return BibdkUser::instance()->update_password($name, $pass);
}

function bibdk_test_provider_user_delete_account($name) {
  return BibdkUser::instance()->delete($name);
}

function bibdk_test_provider_user_get_favourites($name) {
  $path = drupal_get_path('module', 'bibdk_test_provider');

  $ret = file_get_contents($path . '/responses/getFavourites.xml');
  return $ret;
}

function bibdk_test_provider_user_add_favourite($name,$agencyId) {
  return true;
}

function bibdk_test_provider_user_set_favourite($name,$agencyId) {
  return true;
}

class BibdkUser {
  private static $instance;
  protected $test_users=array();

  private function __construct() {
    $this->test_users = variable_get('bibdk_test_users', array());
  }

  public static function instance() {
    if (!isset(self::$instance)) {
      self::$instance = new BibdkUser();
    }
    return self::$instance;
  }

  public function create($name,$pass) {
    $this->test_users[$name] = $pass;
    variable_set('bibdk_test_users',$this->test_users);
    return TRUE;
  }

  public function verify($name) {
    return isset($this->test_users[$name]); 
  }

  public function update_password($name, $pass) {
    $this->test_users[$name] = $pass;
    variable_set('bibdk_test_users',$this->test_users);
  }
}