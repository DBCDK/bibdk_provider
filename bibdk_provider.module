<?php

require_once('BibdkClientClass.php');

/**
 * Impelements hook_menu
 */

/*function bibdk_provider_menu() {
  $items['user/create_login'] = array(
      'page callback' => 'bibdk_provider_get_drupal_user_form',
      'access callback' => TRUE,
   );
    return $items;
    }*/


/*
* Implements hook_ctools_plugin_directory -
* This lets ctools know to scan my module for a content_type plugin file
* Detailed docks in ctools/ctools.api.php
*/
function bibdk_provider_ctools_plugin_directory($owner, $plugin_type) {
  // we'll be nice and limit scandir() calls
  if ($owner == 'ctools' && $plugin_type == 'content_types') {
    return 'plugins/content_types';
  }
}

/**
 * Implement hook_ctools_plugin_api().
 *
 * If you do this, CTools will pick up default panels pages in
 * <modulename>.pages_default.inc
 */

// @TODO; enable this function when code has been exported

function ctools_plugin_example_ctools_plugin_api($module, $api) {
  if ($module == 'panels_mini' && $api == 'panels_default') {
    return array('version' => 1);
  }
  if ($module == 'page_manager' && $api == 'pages_default') {
    return array('version' => 1);
  }
  }


/*function bibdk_provider_get_drupal_user_form() {
  return drupal_get_form('user_register_form');
  }*/

function bibdk_provider_form_user_register_form_alter( &$form, &$form_state) {
  // var_dump($form['account']['name']);
  
  $form['account']['name'] = array(
    '#access' => FALSE
  );

  $form['#submit'][] = 'bibdk_provider_form_user_register_form_delete_temp_user';
  
  /* $form['account']['password'] = array(
    '#type' => 'textfield',
    '#title' => t('Password'),
    '#default_value' => '',
    '#access' => '1',
    '#weight' => '10',
    '#required' => 1,
    );*/
  
  #$form['#validate'][] = 'bibdk_provider_user_register_form_validate';
}

function bibdk_provider_form_user_register_form_delete_temp_user( $form, $form_state ) {
}

function user_register_form_validate(&$elements,&$form) {
  //  var_dump($elements, $form);
  #return true;
  print_r($form_state);
  $password = array();
  $password['#type'] = 'textfield';
  $password['#title'] = t('Password');
  /*  [#maxlength] => 60
                    [#description] => Spaces are allowed; punctuation is not allowed except for periods, hyphens, apostrophes, and underscores.
                    [#required] => 1
                    [#attributes] => Array
                        (
                            [class] => Array
                                (
                                    [0] => username
                                )

                        )
  */
  $password['#default_value'] ='';
  $password['#access'] ='1';
  $password['#weight'] = '-10';
  $password['#required']=1;
  $form['password'] = $password;

  $form['#validate'][] = 'bibdk_provider_user_register_form_validate';
}

function bibdk_provider_user_register_form_validate(&$elements,&$form, &$form_state) {
  return true;  
}



/**
 * Implement hook_ding_provider().
 */
function bibdk_provider_ding_provider() {
  return array(
    'title' => 'Bibliotek.dk provider',
    'settings' => 'bibdk_provider_settings_form',
    'provides' => array(
	'user' => array(
        'prefix' => 'user',
        'file' => drupal_get_path('module', 'bibdk_provider') . '/bibdk_provider.user.inc',
      ),
	/*      'availability' => array(
        'prefix' => 'availability',
        'file' => drupal_get_path('module', 'bibdk_provider') . '/bibdk_provider.availability.inc',
      ),
      
      'reservation' => array(
        'prefix' => 'reservation',
        'file' => drupal_get_path('module', 'bibdk_provider') . '/bibdk_provider.reservation.inc',
      ),
      'loan' => array(
        'prefix' => 'loan',
        'file' => drupal_get_path('module', 'bibdk_provider') . '/bibdk_provider.loan.inc',
      ),
      'debt' => array(
        'prefix' => 'debt',
        'file' => drupal_get_path('module', 'bibdk_provider') . '/bibdk_provider.debt.inc',
	),*/
    ),
  );
}

/**
 * Form callback for provider module settings.
 *
 * This is a regular form callback.
 */
function bibdk_provider_settings_form() {
  $form['bibdk_provider'] = array(
    '#type' => 'fieldset',
    '#title' => t('Bibdk provider service settings'),
    '#tree' => FALSE,
  );

  $form['bibdk_provider']['bibdk_provider_wsdl_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Bibdk provider WSDL URL'),
    '#description' => t('The WSDL URL for Bibdk provider SOAP service, usually something like http://
/bibdk_provider.addi.dk/1.0/bibdk_provider.wsdl'),
    '#required' => TRUE,
    '#default_value' => variable_get('bibdk_provider_wsdl_url', ''),
  );

  //no need for an agencyid
  /*  $form['bibdk_provider']['bibdk_provider_agency_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Agency Id'),
    '#default_value' => variable_get('bibdk_provider_agency_id', ''),
    '#description' => t('The Bibdk provider agency id of the library.'),
    );*/

  $form['bibdk_provider']['bibdk_provider_enable_logging'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable logging'),
    '#default_value' => variable_get('bibdk_provider_enable_logging', FALSE),
    '#description' => t('Logs requests to the Bibdk provider webservice. Sensitive information such 
as CPR number and PIN code is stripped from the requests.'),
  );

  return system_settings_form($form);
}
